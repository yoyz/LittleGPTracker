diff --git a/sources/Application/AppWindow.cpp b/sources/Application/AppWindow.cpp
index faa12a2..1128d5c 100644
--- a/sources/Application/AppWindow.cpp
+++ b/sources/Application/AppWindow.cpp
@@ -77,6 +77,7 @@ AppWindow::AppWindow(I_GUIWindowImp &imp):GUIWindow(imp)  {
 	_mixerView=0 ;
 	_grooveView=0 ;
 	_closeProject=0 ;
+	_loadAfterSaveAsProject=0 ;
 	_lastA=0 ;
 	_lastB=0 ;
 	_mask=0 ;
@@ -264,10 +265,11 @@ void AppWindow::Flush() {
 } ;
 
 void AppWindow::LoadProject(const Path &p)  {
-
+        printf("project:%s\n",p.GetPath().c_str());
 	_root=p ;
 
 	_closeProject=false ;
+	_loadAfterSaveAsProject=false;
 
 	PersistencyService *persist=PersistencyService::GetInstance() ;
 
@@ -450,6 +452,11 @@ bool AppWindow::onEvent(GUIEvent &event) {
 		CloseProject() ;
 		_isDirty=true ;
 	}
+	if(_loadAfterSaveAsProject) {
+	        CloseProject();
+	        _isDirty=true;
+	        LoadProject(_newProjectToLoad);
+	}
 #ifdef _SHOW_GP2X_
 	Redraw() ;
 #else
@@ -529,12 +536,14 @@ void AppWindow::Update(Observable &o,I_ObservableData *d) {
 		break ;
 	  }
 
-/*	  case VET_LIST_SELECT:
+	  case VET_SAVEAS_PROJECT:
 	  {
+	        // name hold the new project name
 		char *name=(char*)ve->GetData() ;
-		LoadProject(name) ;
+		_loadAfterSaveAsProject=true;		
+		strcpy(_newProjectToLoad,name);
 		break ;
-	  } */
+	  } 
 	  case VET_QUIT_PROJECT:
 	  {
    // defer event to after we got out of the view
diff --git a/sources/Application/AppWindow.h b/sources/Application/AppWindow.h
index 4cbf52c..704a4ee 100644
--- a/sources/Application/AppWindow.h
+++ b/sources/Application/AppWindow.h
@@ -77,11 +77,13 @@ private:
 
 	bool _isDirty ;
 	bool _closeProject ;
+	bool _loadAfterSaveAsProject ;
 	bool _shouldQuit ;
 	unsigned short _mask ;
 	unsigned long _lastA ;
 	unsigned long _lastB ;
 	char _statusLine[80] ;
+	char _newProjectToLoad[80];
 	unsigned char _charScreen[1200] ;
 	unsigned char _charScreenProp[1200] ;
 	unsigned char _preScreen[1200] ;

